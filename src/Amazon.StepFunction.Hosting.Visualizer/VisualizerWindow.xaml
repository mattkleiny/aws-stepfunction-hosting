<Window x:Class="Amazon.StepFunction.Hosting.Visualizer.VisualizerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:nodify="http://miroiu.github.io/winfx/xaml/nodify"
        xmlns:viewModels="clr-namespace:Amazon.StepFunction.Hosting.Visualizer.ViewModels"
        xmlns:converters="clr-namespace:Amazon.StepFunction.Hosting.Visualizer.Converters"
        xmlns:diffPlex="clr-namespace:DiffPlex.Wpf.Controls;assembly=DiffPlex.Wpf"
        mc:Ignorable="d"
        x:ClassModifier="internal"
        Title="Step Function Visualizer"
        Width="1280"
        Height="720"
        ResizeMode="CanResizeWithGrip"
        Icon="visualizer.ico"
        SizeChanged="OnSizeChanged"
        KeyDown="OnKeyDown">

  <Window.DataContext>
    <viewModels:ExecutionViewModel />
  </Window.DataContext>

  <Window.Resources>
    <converters:HalfSizeWithOffsetConverter x:Key="HalfSizeWithOffsetConverter" />
  </Window.Resources>

  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition />
      <ColumnDefinition Width="5" />
      <ColumnDefinition Width="600" />
    </Grid.ColumnDefinitions>

    <!-- node canvas -->
    <nodify:NodifyEditor x:Name="NodeEditor"
                         Grid.Column="0"
                         ItemsSource="{Binding Steps}"
                         SelectedItem="{Binding SelectedStep}"
                         SelectedItems="{Binding SelectedSteps}"
                         Connections="{Binding Connections}"
                         SelectionChanged="OnSelectionChanged">
      <!-- container for nodes -->
      <nodify:NodifyEditor.ItemContainerStyle>
        <Style TargetType="{x:Type nodify:ItemContainer}" BasedOn="{StaticResource {x:Type nodify:ItemContainer}}">
          <Setter Property="BorderBrush" Value="Transparent" />
          <Setter Property="Location" Value="{Binding Location}" />
        </Style>
      </nodify:NodifyEditor.ItemContainerStyle>

      <!-- template for nodes -->
      <nodify:NodifyEditor.ItemTemplate>
        <DataTemplate DataType="{x:Type viewModels:StepViewModel}">
          <nodify:StateNode
            Content="{Binding}"
            IsConnected="True"
            Anchor="{Binding Anchor, Mode=OneWayToSource}"
            ActualSize="{Binding Size, Mode=OneWayToSource, Converter={StaticResource HalfSizeWithOffsetConverter}, ConverterParameter=5}">
            <!-- template for node content -->
            <nodify:StateNode.ContentTemplate>
              <DataTemplate DataType="{x:Type viewModels:StepViewModel}">
                <StackPanel Orientation="Vertical">
                  <TextBlock Text="{Binding Name}" TextAlignment="Center" />
                  <TextBlock Text="{Binding Comment}" TextAlignment="Center" />
                </StackPanel>
              </DataTemplate>
            </nodify:StateNode.ContentTemplate>

            <!-- template for node style -->
            <nodify:StateNode.Style>
              <Style TargetType="{x:Type nodify:StateNode}">
                <Style.Triggers>
                  <DataTrigger Binding="{Binding IsActive}" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource ActiveStateBrush}" />
                  </DataTrigger>
                  <DataTrigger Binding="{Binding IsSuccessful}" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource SuccessfulStateBrush}" />
                  </DataTrigger>
                  <DataTrigger Binding="{Binding IsFailed}" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource FailedStateBrush}" />
                  </DataTrigger>
                  <DataTrigger Binding="{Binding IsTerminal}" Value="True">
                    <Setter Property="Background" Value="{DynamicResource TerminalStateBrush}" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </nodify:StateNode.Style>
          </nodify:StateNode>
        </DataTemplate>
      </nodify:NodifyEditor.ItemTemplate>

      <!-- template for connections -->
      <nodify:NodifyEditor.ConnectionTemplate>
        <DataTemplate DataType="{x:Type viewModels:ConnectionViewModel}">
          <nodify:DirectionalConnection Source="{Binding Source.Anchor}"
                                        Target="{Binding Target.Anchor}"
                                        SourceOffset="{Binding Source.Size}"
                                        TargetOffset="{Binding Target.Size}"
                                        OffsetMode="Edge">
            <nodify:DirectionalConnection.Style>
              <Style TargetType="{x:Type nodify:DirectionalConnection}" BasedOn="{StaticResource {x:Type nodify:DirectionalConnection}}">
                <Setter Property="StrokeThickness" Value="3" />
                <Style.Triggers>
                  <DataTrigger Binding="{Binding Target.IsActive}" Value="True">
                    <Setter Property="Stroke" Value="{DynamicResource ActiveStateBrush}" />
                    <Setter Property="StrokeThickness" Value="6" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </nodify:DirectionalConnection.Style>
          </nodify:DirectionalConnection>
        </DataTemplate>
      </nodify:NodifyEditor.ConnectionTemplate>
    </nodify:NodifyEditor>

    <!-- permit resizing the grid -->
    <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" />

    <!-- node inspector -->
    <DockPanel x:Name="Inspector"
               Grid.Column="2"
               Background="{DynamicResource BackgroundBrush}"
               DataContext="{Binding SelectedStep}">
      <!-- node details, docked at the top -->
      <Grid DockPanel.Dock="Top">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="120" />
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Label Margin="5">Step Type:</Label>
        <TextBox Grid.Column="1" Margin="5" Text="{Binding Type}" IsReadOnly="true" />
      </Grid>
      <Grid DockPanel.Dock="Top">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="120" />
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Label Margin="5">Step Name:</Label>
        <TextBox Grid.Column="1" Margin="5" Text="{Binding Name}" IsReadOnly="true" />
      </Grid>
      <Grid DockPanel.Dock="Top">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="120" />
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Label Margin="5">Step Comment:</Label>
        <TextBox Grid.Column="1" Margin="5" Text="{Binding Comment}" IsReadOnly="true" />
      </Grid>
      <Grid DockPanel.Dock="Top">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="120" />
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Label Margin="5">Step Status:</Label>
        <TextBox Grid.Column="1" Margin="5" Text="{Binding Status}" IsReadOnly="true" />
      </Grid>
      <Grid DockPanel.Dock="Top">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="120" />
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Label Margin="5">Last Executed:</Label>
        <TextBox Grid.Column="1" Margin="5" Text="{Binding ExecutedAt}" IsReadOnly="true" />
      </Grid>
      <Grid DockPanel.Dock="Top">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="120" />
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Label Margin="5">Execution Count:</Label>
        <TextBox Grid.Column="1" Margin="5" Text="{Binding ExecutionCount}" IsReadOnly="true" />
      </Grid>
      <Grid DockPanel.Dock="Top">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="120" />
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Label Margin="5">Is Terminal:</Label>
        <TextBox Grid.Column="1" Margin="5" Text="{Binding IsTerminal}" IsReadOnly="true" />
      </Grid>

      <!-- node detail providers, filling remaining space -->
      <TabControl ItemsSource="{Binding DetailProviders}"
                  SelectedIndex="{Binding DataContext.SelectedTab, RelativeSource={RelativeSource AncestorType=Window}}">
        <TabControl.ItemTemplate>
          <DataTemplate>
            <TextBlock Text="{Binding TabName}" />
          </DataTemplate>
        </TabControl.ItemTemplate>
        <TabControl.ContentTemplate>
          <DataTemplate DataType="viewModels:StepDetailViewModel">
            <diffPlex:DiffViewer IsSideBySide="True"
                                 OldTextHeader="Input"
                                 OldText="{Binding InputData}"
                                 NewTextHeader="Output"
                                 NewText="{Binding OutputData}"
                                 Foreground="{DynamicResource ForegroundBrush}" />
          </DataTemplate>
        </TabControl.ContentTemplate>
      </TabControl>
    </DockPanel>

    <!-- canvas for absolute positioning -->
    <Canvas Grid.Column="0">
      <TextBox Canvas.Left="25"
               Canvas.Bottom="25"
               IsReadOnly="True"
               Text="{Binding Title}"
               Style="{DynamicResource CanvasTitle}" />
    </Canvas>

  </Grid>

</Window>