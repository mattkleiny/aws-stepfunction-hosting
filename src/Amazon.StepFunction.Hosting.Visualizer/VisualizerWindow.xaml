<Window x:Class="Amazon.StepFunction.Hosting.Visualizer.VisualizerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:nodify="http://miroiu.github.io/winfx/xaml/nodify"
        xmlns:viewModels="clr-namespace:Amazon.StepFunction.Hosting.Visualizer.ViewModels"
        xmlns:converters="clr-namespace:Amazon.StepFunction.Hosting.Visualizer.Converters"
        mc:Ignorable="d"
        x:ClassModifier="internal"
        Title="Step Function Visualizer"
        Width="1280"
        Height="720"
        ResizeMode="CanResizeWithGrip"
        WindowStartupLocation="CenterScreen"
        Icon="visualizer.ico"
        KeyDown="OnKeyDown">

  <Window.DataContext>
    <viewModels:ExecutionViewModel />
  </Window.DataContext>

  <Window.Resources>
    <converters:HalfSizeWithOffsetConverter x:Key="HalfSizeWithOffsetConverter" />
  </Window.Resources>

  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="Auto" />
      <ColumnDefinition />
    </Grid.ColumnDefinitions>

    <!-- node canvas -->
    <nodify:NodifyEditor x:Name="NodeEditor"
                         ItemsSource="{Binding Steps}"
                         SelectedItem="{Binding SelectedStep}"
                         SelectedItems="{Binding SelectedSteps}"
                         Connections="{Binding Connections}"
                         Grid.Column="1">
      <!-- container for nodes -->
      <nodify:NodifyEditor.ItemContainerStyle>
        <Style TargetType="{x:Type nodify:ItemContainer}" BasedOn="{StaticResource {x:Type nodify:ItemContainer}}">
          <Setter Property="BorderBrush" Value="Transparent" />
          <Setter Property="Location" Value="{Binding Location}" />
        </Style>
      </nodify:NodifyEditor.ItemContainerStyle>

      <!-- template for nodes -->
      <nodify:NodifyEditor.ItemTemplate>
        <DataTemplate DataType="{x:Type viewModels:StepViewModel}">
          <nodify:StateNode
            Content="{Binding}"
            IsConnected="True"
            Anchor="{Binding Anchor, Mode=OneWayToSource}"
            ActualSize="{Binding Size, Mode=OneWayToSource, Converter={StaticResource HalfSizeWithOffsetConverter}, ConverterParameter=5}">
            <!-- template for node content -->
            <nodify:StateNode.ContentTemplate>
              <DataTemplate DataType="{x:Type viewModels:StepViewModel}">
                <StackPanel Orientation="Vertical">
                  <TextBlock Text="{Binding Name}" TextAlignment="Center" />
                  <TextBlock Text="{Binding Description}" TextAlignment="Center" />
                </StackPanel>
              </DataTemplate>
            </nodify:StateNode.ContentTemplate>

            <!-- template for node style -->
            <nodify:StateNode.Style>
              <Style TargetType="{x:Type nodify:StateNode}">
                <Style.Triggers>
                  <DataTrigger Binding="{Binding IsActive}" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource ActiveStateBrush}" />
                  </DataTrigger>
                  <DataTrigger Binding="{Binding IsSuccessful}" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource SuccessfulStateBrush}" />
                  </DataTrigger>
                  <DataTrigger Binding="{Binding IsFailed}" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource FailedStateBrush}" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </nodify:StateNode.Style>
          </nodify:StateNode>
        </DataTemplate>
      </nodify:NodifyEditor.ItemTemplate>

      <!-- template for connections -->
      <nodify:NodifyEditor.ConnectionTemplate>
        <DataTemplate DataType="{x:Type viewModels:ConnectionViewModel}">
          <nodify:DirectionalConnection Source="{Binding Source.Anchor}"
                                        Target="{Binding Target.Anchor}"
                                        SourceOffset="{Binding Source.Size}"
                                        TargetOffset="{Binding Target.Size}"
                                        OffsetMode="Edge">
            <nodify:DirectionalConnection.Style>
              <Style TargetType="{x:Type nodify:DirectionalConnection}" BasedOn="{StaticResource {x:Type nodify:DirectionalConnection}}">
                <Setter Property="StrokeThickness" Value="3" />
                <Style.Triggers>
                  <DataTrigger Binding="{Binding Target.IsActive}" Value="True">
                    <Setter Property="Stroke" Value="{DynamicResource ActiveStateBrush}" />
                    <Setter Property="StrokeThickness" Value="6" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </nodify:DirectionalConnection.Style>
          </nodify:DirectionalConnection>
        </DataTemplate>
      </nodify:NodifyEditor.ConnectionTemplate>
    </nodify:NodifyEditor>

    <!-- left hand inspector -->
    <Expander HorizontalContentAlignment="Left"
              VerticalContentAlignment="Center"
              HorizontalAlignment="Left"
              Background="{DynamicResource BackgroundBrush}"
              BorderBrush="{DynamicResource BorderBrush}"
              BorderThickness="1"
              Padding="0 1 4 3"
              IsExpanded="True"
              ExpandDirection="Left"
              Grid.Column="0">
      <Expander.Style>
        <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource {x:Type Expander}}">
          <Setter Property="Tag" Value="{StaticResource ExpandRightIcon}" />
          <Style.Triggers>
            <Trigger Property="IsExpanded" Value="True">
              <Setter Property="Tag" Value="{StaticResource ExpandLeftIcon}" />
            </Trigger>
          </Style.Triggers>
        </Style>
      </Expander.Style>

      <Grid Width="300" DataContext="{Binding SelectedStep}">
        <Grid.RowDefinitions>
          <RowDefinition />
          <RowDefinition Height="2*" />
        </Grid.RowDefinitions>

        <!-- core step details -->
        <StackPanel Grid.Row="0" Orientation="Vertical">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="100" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Label Margin="5">Step Name:</Label>
            <TextBox Grid.Column="1" Margin="5" Text="{Binding Name}" IsReadOnly="true" />
          </Grid>
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="100" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Label Margin="5">Description:</Label>
            <TextBox Grid.Column="1" Margin="5" Text="{Binding Description}" IsReadOnly="true" />
          </Grid>
        </StackPanel>

        <!-- input/output details -->
        <Grid Grid.Row="1" VerticalAlignment="Stretch">
          <TextBox Text="{Binding Data}" IsReadOnly="True" />
        </Grid>
      </Grid>
    </Expander>

    <!-- canvas for absolute positioning -->
    <Canvas Grid.Column="1">
      <Label Canvas.Right="25"
             Canvas.Bottom="25"
             Content="{Binding Title}"
             Style="{DynamicResource CanvasTitle}" />
    </Canvas>

  </Grid>

</Window>